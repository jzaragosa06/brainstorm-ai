<!-- <!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Persistent Text Highlighter</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            margin: 20px;
        }

        .highlighted {
            background-color: yellow;
            /* Highlight color */
        }
    </style>
</head>

<body>
    <h1>Article</h1>
    <p id="article">
        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus luctus eros aliquet
        convallis ultricies. Mauris augue massa, ultricies non ligula. Suspendisse imperdiet.
        Curabitur arcu erat, accumsan id imperdiet et, porttitor at sem. Donec rutrum congue leo eget malesuada.
    </p>

    <script>
        // Simulating a "database" of previously highlighted texts
        const storedHighlightedTexts = [
            "Lorem ipsum dolor sit amet",
            "Suspendisse imperdiet",
            "Donec rutrum congue leo eget malesuada"
        ];

        // Array to hold new highlighted texts
        const highlightedTexts = [...storedHighlightedTexts];

        // Function to highlight text in the paragraph
        function applyHighlights()
        {
            const article = document.getElementById("article");
            const content = article.innerHTML;

            // Loop through stored highlights and wrap them in a span
            storedHighlightedTexts.forEach((text) =>
            {
                const regex = new RegExp(`(${text})`, "g");
                article.innerHTML = article.innerHTML.replace(
                    regex,
                    `<span class="highlighted">$1</span>`
                );
            });
        }

        // Apply highlights on page load
        applyHighlights();

        // Function to handle text selection for new highlights
        document.getElementById("article").addEventListener("mouseup", () =>
        {
            const selection = window.getSelection();
            const selectedText = selection.toString().trim();

            if (selectedText && !highlightedTexts.includes(selectedText))
            {
                // Add selected text to the array
                highlightedTexts.push(selectedText);

                // Highlight the selected text
                const range = selection.getRangeAt(0);
                const span = document.createElement("span");
                span.className = "highlighted";
                span.textContent = selectedText;

                // Replace the selected text in the DOM with the highlighted span
                range.deleteContents();
                range.insertNode(span);

                // Clear the selection
                selection.removeAllRanges();

                // Log the array of highlighted text
                console.log(highlightedTexts);
            }
        });
    </script>
</body>

</html> -->


<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Persistent Text Highlighter</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            margin: 20px;
        }

        /* Highlight CSS */
        .highlight {
            position: relative;
            display: inline;
        }

        .highlight::before {
            content: '';
            position: absolute;
            background-color: yellow;
            /* Highlight color */
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
        }
    </style>
</head>

<body>
    <h1>Article</h1>
    <p id="article">
        Lorem ipsum dolor sit amet, consectetur <em>adipiscing</em> elit. Vivamus luctus eros aliquet
        convallis ultricies. Mauris augue massa, ultricies non ligula. Suspendisse imperdiet.
        Curabitur arcu erat, accumsan id imperdiet et, <strong>porttitor</strong> at sem.
        Donec rutrum congue leo eget malesuada.
    </p>

    <script>
        // Simulated "database" of highlighted text
        const storedHighlightedTexts = [
            "Lorem ipsum dolor sit amet",
            "Suspendisse imperdiet",
            "congue leo eget malesuada"
        ];

        // Function to apply highlights on text
        function highlightText(text)
        {
            const article = document.getElementById("article");
            const walker = document.createTreeWalker(article, NodeFilter.SHOW_TEXT, null, false);

            // Loop through all text nodes in the article
            while (walker.nextNode())
            {
                const node = walker.currentNode;
                const nodeText = node.nodeValue;

                // Check if the node contains the highlight text
                const matchIndex = nodeText.indexOf(text);
                if (matchIndex !== -1)
                {
                    const parent = node.parentNode;

                    // Split the text node
                    const before = document.createTextNode(nodeText.slice(0, matchIndex));
                    const match = document.createTextNode(nodeText.slice(matchIndex, matchIndex + text.length));
                    const after = document.createTextNode(nodeText.slice(matchIndex + text.length));

                    // Wrap the match in a span
                    const highlightSpan = document.createElement('span');
                    highlightSpan.className = 'highlight';
                    highlightSpan.appendChild(match);

                    // Replace the original text node with the new nodes
                    parent.replaceChild(after, node);
                    parent.insertBefore(highlightSpan, after);
                    parent.insertBefore(before, highlightSpan);
                }
            }
        }

        // Apply stored highlights on page load
        storedHighlightedTexts.forEach(highlightText);

        // Function to handle new selections
        document.getElementById("article").addEventListener("mouseup", () =>
        {
            const selection = window.getSelection();
            const selectedText = selection.toString().trim();

            if (selectedText)
            {
                // Simulate adding to the database and apply highlight
                storedHighlightedTexts.push(selectedText);
                highlightText(selectedText);

                // Clear the selection
                selection.removeAllRanges();

                // Log highlighted texts
                console.log(storedHighlightedTexts);
            }
        });
    </script>
</body>

</html>