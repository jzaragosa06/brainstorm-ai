<!DOCTYPE html>
<html id="html">

<%- include('../partials/head.ejs', {title: "Brainstorm" }) %>

    <body id="body">
        <%- include('../partials/header.ejs') %>

            <div id="pageContainer" class="flex justify-center items-start h-screen px-4 sm:px-0">
                <div id="searchDiv"
                    class="flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4 bg-white p-4 rounded-lg mt-24 sm:mt-36 w-full max-w-md sm:max-w-lg">
                    <!-- Search Input -->
                    <div class="flex-grow relative">
                        <input id="inputTitel" placeholder="Type Something, e.g., Millennial Market" autocomplete="off"
                            type="text"
                            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" />
                        <div id="suggestions"
                            class="absolute left-0 right-0 bg-white border border-gray-200 rounded-lg mt-1 shadow-lg z-10">
                        </div>
                    </div>

                    <!-- Random Article Button -->
                    <a id="randmArticle"
                        class="px-6 py-2 bg-blue-500 text-white font-semibold rounded-lg shadow hover:bg-blue-600 transition duration-200 text-center cursor-pointer">
                        Random Article
                    </a>
                </div>
            </div>


            <script>
                const inputTitel = document.querySelector("#inputTitel");
                const suggestionsContainer = document.querySelector("#suggestions");
                const randomArticleButton = document.querySelector("#randmArticle");

                inputTitel.addEventListener("input", (e) =>
                {
                    const searchString = e.target.value;
                    let pr;

                    if (searchString === "")
                    {
                        pr = Promise.resolve().then(() => []);
                    } else
                    {
                        // Fetch suggestions using OpenSearch
                        pr = fetch(`https://en.wikipedia.org/w/api.php?action=opensearch&origin=*&limit=10&search=${searchString}`)
                            .then(response => response.json())
                            .then(data => data[1]); // Extract the list of suggested titles (second item in response)
                    }

                    pr.then(data =>
                    {
                        suggestionsContainer.innerHTML = ""; // Clear existing suggestions
                        data.forEach(searchRes =>
                        {
                            const suggestionElement = document.createElement("a");
                            suggestionElement.className = "block px-4 py-2 hover:bg-gray-100 cursor-pointer text-sm text-gray-700";
                            suggestionElement.textContent = searchRes;
                            suggestionElement.addEventListener("click", () =>
                            {
                                console.log(`Selected: ${searchRes}`);
                                const url = `https://en.wikipedia.org/w/api.php?action=query&titles=${encodeURIComponent(searchRes)}&format=json&origin=*`;
                                fetch(url)
                                    .then(response => response.json())
                                    .then(data =>
                                    {
                                        const pages = data.query.pages;
                                        const pageId = Object.keys(pages)[0]; // Get the first (and usually only) pageid
                                        console.log(`Page ID for "${searchRes}": ${pageId}`);
                                        window.location.href = `/brainstorm1/lab?pageids=${pageId}`;
                                    })
                                    .catch(error => console.error("Error fetching pageid:", error));

                            });
                            suggestionsContainer.appendChild(suggestionElement);
                        });
                    });
                });

                randomArticleButton.addEventListener("click", () =>
                {
                    fetch(`https://en.wikipedia.org/api/rest_v1/page/random/title`)
                        .then(response => response.json())
                        .then(data =>
                        {
                            const searchRes = data.items[0].title;

                            const url = `https://en.wikipedia.org/w/api.php?action=query&titles=${encodeURIComponent(searchRes)}&format=json&origin=*`;
                            fetch(url)
                                .then(response => response.json())
                                .then(data =>
                                {
                                    const pages = data.query.pages;
                                    const pageId = Object.keys(pages)[0]; // Get the first (and usually only) pageid
                                    console.log(`Page ID for "${searchRes}": ${pageId}`);
                                    window.location.href = `/brainstorm?pageids=${pageId}`;
                                })
                                .catch(error => console.error("Error fetching pageid:", error));
                        })
                        .catch(error => console.error("Error fetching random article:", error));
                });

                function loadWikiPage(title)
                {
                    console.log(`Loading Wikipedia page: ${title}`);
                    // Implement functionality to load the Wikipedia page.
                }
            </script>

    </body>

</html>